info:
  application:
    name: MovieLand Backend
management:
  zipkin:
    tracing:
      endpoint: http://${zipkin-server:localhost:9411}/api/v2/spans
  info:
    java:
      enabled: true
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
  security:
    enabled: false
  # All traces should be sent to latency analysis tool
  tracing:
    enabled: ${tracing-enabled}
    sampling:
      probability: 1.0
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
logging:
  pattern:
    file: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} : %msg%n'
    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} : %msg%n'
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
  level:
    org:
      springframework:
        web:
          servlet:
            DispatcherServlet: WARN
            mvc:
              method:
                annotation:
                  RequestResponseBodyMethodProcessor: WARN
          filter:
            CommonsRequestLoggingFilter: DEBUG
    root: INFO
    tomcat: WARN
  file:
    path: logs
  group:
    tomcat: org.apache.catalina, org.apache.coyote, org.apache.tomcat
spring:
  zipkin:
    base-url: ${zipkin-server:http://localhost:9411}
  application:
    name: MovieLand Backend
  datasource:
    driverClassName: org.postgresql.Driver
    password: movielandadmin
    username: movielandadmin
    url: jdbc:postgresql://localhost:5432/movieland_db
  security:
    user:
      password: admin
      name: admin
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  sql:
    init:
      mode: never
  boot:
    admin:
      client:
        url: http://localhost:8081
  output:
    ansi:
      enabled: ALWAYS
  banner:
    location: banner.txt
  thymeleaf:
    enabled: 'false'
server:
  tomcat:
    accesslog:
      enabled: 'false'
app:
  jwtExpirationInMs: '604800000'
  jwtSecret: JWTSuperSecretKey
tmdbApi:
  apikey: 7034789c8e20ce00ad84dc8661c288bf
loki:
  enabled: ${loki-enabled}
  server: ${loki-server:localhost:3100}
