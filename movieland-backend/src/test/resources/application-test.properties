#spring.jpa.hibernate.ddl-auto=update
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.springframework.jdbc.datasource.init.ScriptUtils=debug

logging.level.org.springframework.jdbc.datasource.init.ScriptUtils=debug
## MySQL
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.initialization-mode=always
spring.datasource.data=classpath:data-test.sql
spring.datasource.schema=classpath:create.sql

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#`hibernate_sequence' doesn't exist
spring.jpa.hibernate.use-new-id-generator-mappings=false

# drop n create table, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=update
spring.security.user.name=admin
spring.security.user.password=admin
app.jwtSecret=JWTSuperSecretKey
app.jwtExpirationInMs=604800000
spring.banner.location=banner.txt
#SSL
#server.port=8443
#server.ssl.enabled=true
# The format used for the keystore. It could be set to JKS in case it is a JKS file
#server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
#server.ssl.key-store=classpath:movieland.p12
# The password used to generate the certificate
#server.ssl.key-store-password=movieland
# The alias mapped to the certificate
#server.ssl.key-alias=movieland

logging.file.path=logs

tmdbApi.apikey=86d157bbb36335ea938b606634e1c4ab

