version: '3.3'
services:
  # App backend service
  movieland-backend:
    container_name: movieland-backend
    build:
      context: movieland-backend
      dockerfile: Dockerfile
    image: movieland-backend
    ports:
      - "8080:8080"
    depends_on:
      - movieland-db # This service depends on mysql. Start that first.
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://movieland-db:5432/movieland_db?useLegacyDatetimeCode=false&serverTimezone=Europe/Berlin
      SPRING_DATASOURCE_USERNAME: movielandadmin
      SPRING_DATASOURCE_PASSWORD: movielandadmin
      SPRING_BOOT_ADMIN_CLIENT_URL: http://movieland-spring-admin:8081
      TRACING_ENABLED: false
      LOKI_ENABLED: false
      PORT: 8080
    networks:
      - backend
      - frontend

  movieland-spring-admin:
    extends:
      file: docker-compose-dev.yml
      service: movieland-spring-admin

  movieland-frontend:
    extends:
      file: docker-compose-dev.yml
      service: movieland-frontend

  movieland-db:
    extends:
      file: docker-compose-dev.yml
      service: movieland-db

# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend:

